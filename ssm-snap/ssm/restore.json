{
    "description": "Sample Automation Document Using AWS API Actions",
    "schemaVersion": "0.3",
    "assumeRole": "{{ AutomationAssumeRole }}",
    "parameters": {
        "AutomationAssumeRole": {
            "type": "String",
            "description": "(Optional) The ARN of the role that allows Automation to perform the actions on your behalf.",
            "default": ""
        },
        "SourceInstanceId": {
            "type": "String",
            "description": "Source SQL Server"
        },
        "DestInstanceId": {
            "type": "String",
            "description": "Destination SQL Server"
        }
    },
    "mainSteps": [
        {
            "name": "getDestinationAz",
            "action": "aws:executeAwsApi",
            "inputs": {
                "Service": "ec2",
                "Api": "DescribeInstances",
                "InstanceIds": [
                    "{{ DestInstanceId }}"
                ]
            },
            "outputs": [
                {
                    "Name": "destAvailabilityZone",
                    "Selector": "$.Reservations[0].Instances[0].Placement.AvailabilityZone",
                    "Type": "String"
                }
            ]
        },
        {
            "name": "createVssSnapshots",
            "action": "aws:runCommand",
            "inputs": {
                "DocumentName": "AWSEC2-CreateVssSnapshot",
                "InstanceIds": [
                    "{{ SourceInstanceId }}"
                ],
                "Parameters": {
                    "ExcludeBootVolume": "True",
                    "tags": "Key=Name,Value=VSS Snapshot;Key=BackupId,Value={{ automation:EXECUTION_ID }}"
                }
            }
        },
        {
            "name": "getSnapshotIds",
            "action": "aws:executeAwsApi",
            "inputs": {
                "Service": "ec2",
                "Api": "DescribeSnapshots",
                "Filters": [
                    {
                        "Name": "tag:BackupId",
                        "Values": [
                            "{{ automation:EXECUTION_ID }}"
                        ]
                    }
                ]
            },
            "outputs": [
                {
                    "Name": "SnapshotId0",
                    "Selector": "$.Snapshots[0].SnapshotId",
                    "Type": "String"
                },
                {
                    "Name": "SnapshotId1",
                    "Selector": "$.Snapshots[1].SnapshotId",
                    "Type": "String"
                }
            ]
        },
        {
            "name": "checkSnapshots",
            "action": "aws:waitForAwsResourceProperty",
            "timeoutSeconds": 3000,
            "inputs": {
                "Service": "ec2",
                "Api": "DescribeSnapshots",
                "SnapshotIds": [
                    "{{ getSnapshotIds.SnapshotId0 }}",
                    "{{ getSnapshotIds.SnapshotId1 }}"
                ],
                "PropertySelector": "$.Snapshots..State",
                "DesiredValues": [
                    "completed"
                ]
            }
        },
        {
            "name": "createVolume0",
            "action": "aws:executeAwsApi",
            "onFailure": "step:deleteSnapshot0",
            "inputs": {
                "Service": "ec2",
                "Api": "CreateVolume",
                "AvailabilityZone": "{{ getDestinationAz.destAvailabilityZone }}",
                "SnapshotId": "{{ getSnapshotIds.SnapshotId0 }}"
            },
            "outputs": [
                {
                    "Name": "VolumeId0",
                    "Selector": "$.VolumeId",
                    "Type": "String"
                }
            ]
        },
        {
            "name": "createVolume1",
            "action": "aws:executeAwsApi",
            "onFailure": "step:deleteSnapshot1",
            "inputs": {
                "Service": "ec2",
                "Api": "CreateVolume",
                "AvailabilityZone": "{{ getDestinationAz.destAvailabilityZone }}",
                "SnapshotId": "{{ getSnapshotIds.SnapshotId1 }}"
            },
            "outputs": [
                {
                    "Name": "VolumeId1",
                    "Selector": "$.VolumeId",
                    "Type": "String"
                }
            ]
        },
        {
            "name": "checkVolumes",
            "action": "aws:waitForAwsResourceProperty",
            "timeoutSeconds": 300,
            "inputs": {
                "Service": "ec2",
                "Api": "DescribeVolumes",
                "VolumeIds": [
                    "{{ createVolume0.VolumeId0 }}",
                    "{{ createVolume1.VolumeId1 }}"
                ],
                "PropertySelector": "$.Volumes..State",
                "DesiredValues": [
                    "available"
                ]
            }
        },
        {
            "name": "attachVolume0",
            "action": "aws:executeAwsApi",
            "onFailure": "step:deleteVolume0",
            "inputs": {
                "Service": "ec2",
                "Api": "AttachVolume",
                "VolumeId": "{{ createVolume0.VolumeId0 }}",
                "InstanceId": "{{ DestInstanceId }}",
                "Device": "xvdh"
            }
        },
        {
            "name": "attachVolume1",
            "action": "aws:executeAwsApi",
            "onFailure": "step:deleteVolume1",
            "inputs": {
                "Service": "ec2",
                "Api": "AttachVolume",
                "VolumeId": "{{ createVolume1.VolumeId1 }}",
                "InstanceId": "{{ DestInstanceId }}",
                "Device": "xvdf"
            }
        },
        {
            "name": "runDiskScript",
            "action": "aws:runCommand",
            "onFailure": "step:detachVolume0",
            "inputs": {
                "DocumentName": "UpdateHostStorageCache",
                "InstanceIds": [
                    "{{ DestInstanceId }}"
                ]
            }
        },
        {
            "name": "runSQLScript",
            "action": "aws:runCommand",
            "onFailure": "step:detachVolume0",
            "timeoutSeconds": 2592000,
            "inputs": {
                "DocumentName": "SSIS",
                "InstanceIds": [
                    "{{ DestInstanceId }}"
                ]
            },
            "isEnd": false
        },
        {
            "name": "runSQLCleanUpScript",
            "onFailure": "step:detachVolume0",
            "action": "aws:runCommand",
            "timeoutSeconds": 2592000,
            "inputs": {
                "DocumentName": "DropTable",
                "InstanceIds": [
                    "{{ DestInstanceId }}"
                ]
            },
            "isEnd": false
        },
        {
            "name": "detachVolume0",
            "action": "aws:executeAwsApi",
            "onFailure": "Continue",
            "inputs": {
                "Service": "ec2",
                "Api": "DetachVolume",
                "VolumeId": "{{ createVolume0.VolumeId0 }}",
                "InstanceId": "{{ DestInstanceId }}",
                "Device": "xvdh"
            }
        },
        {
            "name": "detachVolume1",
            "action": "aws:executeAwsApi",
            "onFailure": "Continue",
            "inputs": {
                "Service": "ec2",
                "Api": "DetachVolume",
                "VolumeId": "{{ createVolume1.VolumeId1 }}",
                "InstanceId": "{{ DestInstanceId }}",
                "Device": "xvdf"
            }
        },
        {
            "name": "checkVolumesBeforeDelete",
            "action": "aws:waitForAwsResourceProperty",
            "onFailure": "Continue",
            "timeoutSeconds": 300,
            "inputs": {
                "Service": "ec2",
                "Api": "DescribeVolumes",
                "VolumeIds": [
                    "{{ createVolume0.VolumeId0 }}",
                    "{{ createVolume1.VolumeId1 }}"
                ],
                "PropertySelector": "$.Volumes..State",
                "DesiredValues": [
                    "available"
                ]
            }
        },
        {
            "name": "deleteVolume0",
            "action": "aws:executeAwsApi",
            "onFailure": "Continue",
            "inputs": {
                "Service": "ec2",
                "Api": "DeleteVolume",
                "VolumeId": "{{ createVolume0.VolumeId0 }}"
            }
        },
        {
            "name": "deleteVolume1",
            "action": "aws:executeAwsApi",
            "onFailure": "Continue",
            "inputs": {
                "Service": "ec2",
                "Api": "DeleteVolume",
                "VolumeId": "{{ createVolume1.VolumeId1 }}"
            }
        },
        {
            "name": "deleteSnapshot0",
            "action": "aws:executeAwsApi",
            "onFailure": "Continue",
            "inputs": {
                "Service": "ec2",
                "Api": "DeleteSnapshot",
                "SnapshotId": "{{ getSnapshotIds.SnapshotId0 }}"
            }
        },
        {
            "name": "deleteSnapshot1",
            "action": "aws:executeAwsApi",
            "inputs": {
                "Service": "ec2",
                "Api": "DeleteSnapshot",
                "SnapshotId": "{{ getSnapshotIds.SnapshotId1 }}"
            },
            "isEnd": true
        }
    ]
}